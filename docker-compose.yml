version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: bizflow_db
    environment:
      POSTGRES_DB: bizflow
      POSTGRES_USER: bizflow_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-bizflow_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/bizflow-backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - bizflow_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bizflow_user -d bizflow"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache (Optional)
  redis:
    image: redis:7-alpine
    container_name: bizflow_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - bizflow_network
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  api:
    build:
      context: ./backend/bizflow-backend
      dockerfile: Dockerfile
    container_name: bizflow_api
    environment:
      - FLASK_ENV=${FLASK_ENV:-production}
      - SECRET_KEY=${SECRET_KEY}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - DATABASE_URL=postgresql://bizflow_user:${DB_PASSWORD:-bizflow_password}@db:5432/bizflow
      - REDIS_URL=redis://redis:6379/0
      - PAYSTACK_SECRET_KEY=${PAYSTACK_SECRET_KEY}
      - PAYSTACK_PUBLIC_KEY=${PAYSTACK_PUBLIC_KEY}
      - SMTP_SERVER=${SMTP_SERVER:-smtp.gmail.com}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - FROM_EMAIL=${FROM_EMAIL}
      - FROM_NAME=${FROM_NAME:-Bizflow SME Nigeria}
    ports:
      - "5000:5000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - bizflow_network
    restart: unless-stopped
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: bizflow_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./frontend/bizflow-frontend/dist:/usr/share/nginx/html
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - api
    networks:
      - bizflow_network
    restart: unless-stopped

  # Backup Service
  backup:
    image: postgres:15-alpine
    container_name: bizflow_backup
    environment:
      PGPASSWORD: ${DB_PASSWORD:-bizflow_password}
    volumes:
      - ./backups:/backups
      - ./scripts/backup.sh:/backup.sh
    depends_on:
      - db
    networks:
      - bizflow_network
    restart: "no"
    command: /bin/sh -c "chmod +x /backup.sh && crond -f"

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  bizflow_network:
    driver: bridge

